import { ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';
import { NgxGalleryService } from '../ngx-gallery.service';
import { NgxGalleryAction } from '../ngx-gallery-action';
import * as ɵngcc0 from '@angular/core';
export declare class NgxGalleryThumbnailsComponent implements OnInit, OnChanges {
    private sanitization;
    private elementRef;
    private helperService;
    thumbnailsLeft: string;
    thumbnailsMarginLeft: string;
    mouseenter: boolean;
    remainingCountValue: number;
    minStopIndex: number;
    images: string[] | SafeResourceUrl[];
    links: string[];
    labels: string[];
    linkTarget: string;
    columns: number;
    rows: number;
    arrows: boolean;
    arrowsAutoHide: boolean;
    margin: number;
    selectedIndex: number;
    clickable: boolean;
    swipe: boolean;
    size: string;
    arrowPrevIcon: string;
    arrowNextIcon: string;
    moveSize: number;
    order: number;
    remainingCount: boolean;
    lazyLoading: boolean;
    actions: NgxGalleryAction[];
    activeChange: EventEmitter<any>;
    private index;
    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    reset(index: number): void;
    getImages(): string[] | SafeResourceUrl[];
    handleClick(event: Event, index: number): void;
    hasLink(index: number): boolean;
    moveRight(): void;
    moveLeft(): void;
    canMoveRight(): boolean;
    canMoveLeft(): boolean;
    getThumbnailLeft(index: number): SafeStyle;
    getThumbnailTop(index: number): SafeStyle;
    getThumbnailWidth(): SafeStyle;
    getThumbnailHeight(): SafeStyle;
    setThumbnailsPosition(): void;
    setDefaultPosition(): void;
    canShowArrows(): boolean;
    validateIndex(): void;
    getSafeUrl(image: string): SafeStyle;
    getFileType(fileSource: string): string;
    private getThumbnailPosition;
    private getThumbnailDimension;
    private getMaxIndex;
    private getVisibleCount;
    private getSafeStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxGalleryThumbnailsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxGalleryThumbnailsComponent, "ngx-gallery-thumbnails", never, { "selectedIndex": "selectedIndex"; "images": "images"; "links": "links"; "labels": "labels"; "linkTarget": "linkTarget"; "columns": "columns"; "rows": "rows"; "arrows": "arrows"; "arrowsAutoHide": "arrowsAutoHide"; "margin": "margin"; "clickable": "clickable"; "swipe": "swipe"; "size": "size"; "arrowPrevIcon": "arrowPrevIcon"; "arrowNextIcon": "arrowNextIcon"; "moveSize": "moveSize"; "order": "order"; "remainingCount": "remainingCount"; "lazyLoading": "lazyLoading"; "actions": "actions"; }, { "activeChange": "activeChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdhbGxlcnktdGh1bWJuYWlscy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmd4LWdhbGxlcnktdGh1bWJuYWlscy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZVJlc291cmNlVXJsLCBTYWZlU3R5bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IE5neEdhbGxlcnlTZXJ2aWNlIH0gZnJvbSAnLi4vbmd4LWdhbGxlcnkuc2VydmljZSc7XG5pbXBvcnQgeyBOZ3hHYWxsZXJ5QWN0aW9uIH0gZnJvbSAnLi4vbmd4LWdhbGxlcnktYWN0aW9uJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5neEdhbGxlcnlUaHVtYm5haWxzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgc2FuaXRpemF0aW9uO1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGhlbHBlclNlcnZpY2U7XG4gICAgdGh1bWJuYWlsc0xlZnQ6IHN0cmluZztcbiAgICB0aHVtYm5haWxzTWFyZ2luTGVmdDogc3RyaW5nO1xuICAgIG1vdXNlZW50ZXI6IGJvb2xlYW47XG4gICAgcmVtYWluaW5nQ291bnRWYWx1ZTogbnVtYmVyO1xuICAgIG1pblN0b3BJbmRleDogbnVtYmVyO1xuICAgIGltYWdlczogc3RyaW5nW10gfCBTYWZlUmVzb3VyY2VVcmxbXTtcbiAgICBsaW5rczogc3RyaW5nW107XG4gICAgbGFiZWxzOiBzdHJpbmdbXTtcbiAgICBsaW5rVGFyZ2V0OiBzdHJpbmc7XG4gICAgY29sdW1uczogbnVtYmVyO1xuICAgIHJvd3M6IG51bWJlcjtcbiAgICBhcnJvd3M6IGJvb2xlYW47XG4gICAgYXJyb3dzQXV0b0hpZGU6IGJvb2xlYW47XG4gICAgbWFyZ2luOiBudW1iZXI7XG4gICAgc2VsZWN0ZWRJbmRleDogbnVtYmVyO1xuICAgIGNsaWNrYWJsZTogYm9vbGVhbjtcbiAgICBzd2lwZTogYm9vbGVhbjtcbiAgICBzaXplOiBzdHJpbmc7XG4gICAgYXJyb3dQcmV2SWNvbjogc3RyaW5nO1xuICAgIGFycm93TmV4dEljb246IHN0cmluZztcbiAgICBtb3ZlU2l6ZTogbnVtYmVyO1xuICAgIG9yZGVyOiBudW1iZXI7XG4gICAgcmVtYWluaW5nQ291bnQ6IGJvb2xlYW47XG4gICAgbGF6eUxvYWRpbmc6IGJvb2xlYW47XG4gICAgYWN0aW9uczogTmd4R2FsbGVyeUFjdGlvbltdO1xuICAgIGFjdGl2ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJpdmF0ZSBpbmRleDtcbiAgICBjb25zdHJ1Y3RvcihzYW5pdGl6YXRpb246IERvbVNhbml0aXplciwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgaGVscGVyU2VydmljZTogTmd4R2FsbGVyeVNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgb25Nb3VzZUVudGVyKCk6IHZvaWQ7XG4gICAgb25Nb3VzZUxlYXZlKCk6IHZvaWQ7XG4gICAgcmVzZXQoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgZ2V0SW1hZ2VzKCk6IHN0cmluZ1tdIHwgU2FmZVJlc291cmNlVXJsW107XG4gICAgaGFuZGxlQ2xpY2soZXZlbnQ6IEV2ZW50LCBpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBoYXNMaW5rKGluZGV4OiBudW1iZXIpOiBib29sZWFuO1xuICAgIG1vdmVSaWdodCgpOiB2b2lkO1xuICAgIG1vdmVMZWZ0KCk6IHZvaWQ7XG4gICAgY2FuTW92ZVJpZ2h0KCk6IGJvb2xlYW47XG4gICAgY2FuTW92ZUxlZnQoKTogYm9vbGVhbjtcbiAgICBnZXRUaHVtYm5haWxMZWZ0KGluZGV4OiBudW1iZXIpOiBTYWZlU3R5bGU7XG4gICAgZ2V0VGh1bWJuYWlsVG9wKGluZGV4OiBudW1iZXIpOiBTYWZlU3R5bGU7XG4gICAgZ2V0VGh1bWJuYWlsV2lkdGgoKTogU2FmZVN0eWxlO1xuICAgIGdldFRodW1ibmFpbEhlaWdodCgpOiBTYWZlU3R5bGU7XG4gICAgc2V0VGh1bWJuYWlsc1Bvc2l0aW9uKCk6IHZvaWQ7XG4gICAgc2V0RGVmYXVsdFBvc2l0aW9uKCk6IHZvaWQ7XG4gICAgY2FuU2hvd0Fycm93cygpOiBib29sZWFuO1xuICAgIHZhbGlkYXRlSW5kZXgoKTogdm9pZDtcbiAgICBnZXRTYWZlVXJsKGltYWdlOiBzdHJpbmcpOiBTYWZlU3R5bGU7XG4gICAgZ2V0RmlsZVR5cGUoZmlsZVNvdXJjZTogc3RyaW5nKTogc3RyaW5nO1xuICAgIHByaXZhdGUgZ2V0VGh1bWJuYWlsUG9zaXRpb247XG4gICAgcHJpdmF0ZSBnZXRUaHVtYm5haWxEaW1lbnNpb247XG4gICAgcHJpdmF0ZSBnZXRNYXhJbmRleDtcbiAgICBwcml2YXRlIGdldFZpc2libGVDb3VudDtcbiAgICBwcml2YXRlIGdldFNhZmVTdHlsZTtcbn1cbiJdfQ==