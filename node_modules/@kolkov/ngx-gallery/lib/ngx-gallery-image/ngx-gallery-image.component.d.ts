import { ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { DomSanitizer, SafeStyle } from '@angular/platform-browser';
import { NgxGalleryService } from '../ngx-gallery.service';
import { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image';
import { NgxGalleryAction } from '../ngx-gallery-action';
import * as ɵngcc0 from '@angular/core';
export declare class NgxGalleryImageComponent implements OnInit, OnChanges {
    private sanitization;
    private elementRef;
    private helperService;
    images: NgxGalleryOrderedImage[];
    clickable: boolean;
    selectedIndex: number;
    arrows: boolean;
    arrowsAutoHide: boolean;
    swipe: boolean;
    animation: string;
    size: string;
    arrowPrevIcon: string;
    arrowNextIcon: string;
    autoPlay: boolean;
    autoPlayInterval: number;
    autoPlayPauseOnHover: boolean;
    infinityMove: boolean;
    lazyLoading: boolean;
    actions: NgxGalleryAction[];
    descriptions: string[];
    showDescription: boolean;
    bullets: boolean;
    imageClick: EventEmitter<any>;
    activeChange: EventEmitter<any>;
    canChangeImage: boolean;
    private timer;
    constructor(sanitization: DomSanitizer, elementRef: ElementRef, helperService: NgxGalleryService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    reset(index: number): void;
    getImages(): NgxGalleryOrderedImage[];
    startAutoPlay(): void;
    stopAutoPlay(): void;
    handleClick(event: Event, index: number): void;
    show(index: number): void;
    showNext(): boolean;
    showPrev(): void;
    setChangeTimeout(): void;
    canShowNext(): boolean;
    canShowPrev(): boolean;
    getSafeUrl(image: string): SafeStyle;
    getFileType(fileSource: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxGalleryImageComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxGalleryImageComponent, "ngx-gallery-image", never, { "arrows": "arrows"; "selectedIndex": "selectedIndex"; "images": "images"; "clickable": "clickable"; "arrowsAutoHide": "arrowsAutoHide"; "swipe": "swipe"; "animation": "animation"; "size": "size"; "arrowPrevIcon": "arrowPrevIcon"; "arrowNextIcon": "arrowNextIcon"; "autoPlay": "autoPlay"; "autoPlayInterval": "autoPlayInterval"; "autoPlayPauseOnHover": "autoPlayPauseOnHover"; "infinityMove": "infinityMove"; "lazyLoading": "lazyLoading"; "actions": "actions"; "descriptions": "descriptions"; "showDescription": "showDescription"; "bullets": "bullets"; }, { "imageClick": "imageClick"; "activeChange": "activeChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdhbGxlcnktaW1hZ2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5neC1nYWxsZXJ5LWltYWdlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZVN0eWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBOZ3hHYWxsZXJ5U2VydmljZSB9IGZyb20gJy4uL25neC1nYWxsZXJ5LnNlcnZpY2UnO1xuaW1wb3J0IHsgTmd4R2FsbGVyeU9yZGVyZWRJbWFnZSB9IGZyb20gJy4uL25neC1nYWxsZXJ5LW9yZGVyZWQtaW1hZ2UnO1xuaW1wb3J0IHsgTmd4R2FsbGVyeUFjdGlvbiB9IGZyb20gJy4uL25neC1nYWxsZXJ5LWFjdGlvbic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hHYWxsZXJ5SW1hZ2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBzYW5pdGl6YXRpb247XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgaGVscGVyU2VydmljZTtcbiAgICBpbWFnZXM6IE5neEdhbGxlcnlPcmRlcmVkSW1hZ2VbXTtcbiAgICBjbGlja2FibGU6IGJvb2xlYW47XG4gICAgc2VsZWN0ZWRJbmRleDogbnVtYmVyO1xuICAgIGFycm93czogYm9vbGVhbjtcbiAgICBhcnJvd3NBdXRvSGlkZTogYm9vbGVhbjtcbiAgICBzd2lwZTogYm9vbGVhbjtcbiAgICBhbmltYXRpb246IHN0cmluZztcbiAgICBzaXplOiBzdHJpbmc7XG4gICAgYXJyb3dQcmV2SWNvbjogc3RyaW5nO1xuICAgIGFycm93TmV4dEljb246IHN0cmluZztcbiAgICBhdXRvUGxheTogYm9vbGVhbjtcbiAgICBhdXRvUGxheUludGVydmFsOiBudW1iZXI7XG4gICAgYXV0b1BsYXlQYXVzZU9uSG92ZXI6IGJvb2xlYW47XG4gICAgaW5maW5pdHlNb3ZlOiBib29sZWFuO1xuICAgIGxhenlMb2FkaW5nOiBib29sZWFuO1xuICAgIGFjdGlvbnM6IE5neEdhbGxlcnlBY3Rpb25bXTtcbiAgICBkZXNjcmlwdGlvbnM6IHN0cmluZ1tdO1xuICAgIHNob3dEZXNjcmlwdGlvbjogYm9vbGVhbjtcbiAgICBidWxsZXRzOiBib29sZWFuO1xuICAgIGltYWdlQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGFjdGl2ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY2FuQ2hhbmdlSW1hZ2U6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSB0aW1lcjtcbiAgICBjb25zdHJ1Y3RvcihzYW5pdGl6YXRpb246IERvbVNhbml0aXplciwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgaGVscGVyU2VydmljZTogTmd4R2FsbGVyeVNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgb25Nb3VzZUVudGVyKCk6IHZvaWQ7XG4gICAgb25Nb3VzZUxlYXZlKCk6IHZvaWQ7XG4gICAgcmVzZXQoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgZ2V0SW1hZ2VzKCk6IE5neEdhbGxlcnlPcmRlcmVkSW1hZ2VbXTtcbiAgICBzdGFydEF1dG9QbGF5KCk6IHZvaWQ7XG4gICAgc3RvcEF1dG9QbGF5KCk6IHZvaWQ7XG4gICAgaGFuZGxlQ2xpY2soZXZlbnQ6IEV2ZW50LCBpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBzaG93KGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHNob3dOZXh0KCk6IGJvb2xlYW47XG4gICAgc2hvd1ByZXYoKTogdm9pZDtcbiAgICBzZXRDaGFuZ2VUaW1lb3V0KCk6IHZvaWQ7XG4gICAgY2FuU2hvd05leHQoKTogYm9vbGVhbjtcbiAgICBjYW5TaG93UHJldigpOiBib29sZWFuO1xuICAgIGdldFNhZmVVcmwoaW1hZ2U6IHN0cmluZyk6IFNhZmVTdHlsZTtcbiAgICBnZXRGaWxlVHlwZShmaWxlU291cmNlOiBzdHJpbmcpOiBzdHJpbmc7XG59XG4iXX0=