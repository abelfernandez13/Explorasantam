import { __decorate } from "tslib";
import { NgModule, Injectable } from '@angular/core';
import { NgxGalleryComponent } from './ngx-gallery.component';
import { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';
import { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';
import { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';
import { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';
import { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';
import { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';
import { CommonModule } from '@angular/common';
import { HAMMER_GESTURE_CONFIG, HammerGestureConfig } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
let CustomHammerConfig = class CustomHammerConfig extends HammerGestureConfig {
    constructor() {
        super(...arguments);
        this.overrides = {
            pinch: { enable: false },
            rotate: { enable: false }
        };
    }
};
CustomHammerConfig.ɵfac = function CustomHammerConfig_Factory(t) { return ɵCustomHammerConfig_BaseFactory(t || CustomHammerConfig); };
CustomHammerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomHammerConfig, factory: CustomHammerConfig.ɵfac });
export { CustomHammerConfig };
let NgxGalleryModule = class NgxGalleryModule {
};
NgxGalleryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxGalleryModule });
NgxGalleryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxGalleryModule_Factory(t) { return new (t || NgxGalleryModule)(); }, providers: [
        { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }
    ], imports: [[CommonModule]] });
const ɵCustomHammerConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CustomHammerConfig);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomHammerConfig, [{
        type: Injectable
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxGalleryModule, { declarations: function () { return [NgxGalleryComponent,
        NgxGalleryImageComponent,
        NgxGalleryArrowsComponent,
        NgxGalleryThumbnailsComponent,
        NgxGalleryPreviewComponent,
        NgxGalleryActionComponent,
        NgxGalleryBulletsComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxGalleryComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGalleryModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    NgxGalleryComponent,
                    NgxGalleryImageComponent,
                    NgxGalleryArrowsComponent,
                    NgxGalleryThumbnailsComponent,
                    NgxGalleryPreviewComponent,
                    NgxGalleryActionComponent,
                    NgxGalleryBulletsComponent
                ],
                imports: [CommonModule],
                exports: [NgxGalleryComponent],
                providers: [
                    { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }
                ]
            }]
    }], null, null); })();
export { NgxGalleryModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdhbGxlcnkubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovQGtvbGtvdi9uZ3gtZ2FsbGVyeS9saWIvbmd4LWdhbGxlcnkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RCxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUN6RixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxtREFBbUQsQ0FBQztBQUM1RixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSwyREFBMkQsQ0FBQztBQUN4RyxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxxREFBcUQsQ0FBQztBQUMvRixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxtREFBbUQsQ0FBQztBQUM1RixPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxxREFBcUQsQ0FBQztBQUMvRixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFDLHFCQUFxQixFQUFFLG1CQUFtQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7O0FBR3JGLElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQW1CLFNBQVEsbUJBQW1CO0FBQUcsSUFBOUQ7QUFBZ0I7QUFBNkIsUUFDM0MsY0FBUyxHQUFHO0FBQ2QsWUFBSSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO0FBQzVCLFlBQUksTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTtBQUM3QixTQUFVLENBQUM7QUFDWCxJQUFBLENBQUM7QUFDRCxDQURDLENBQUE7QUFMWSxrQkFBa0Isb0JBRDlCLFVBQVUsRUFBRSxJQUNBLGtCQUFrQixDQUs5QjtzSEFDRDtBQUNBLFNBUGEsa0JBQWtCO0FBd0IvQixJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtBQUM3QixDQUFDLENBQUE7QUFEWSxnQkFBZ0Isb0JBaEI1QixRQUFRLENBQUMsVUFDUixZQUFZLEVBQUU7TUFDWixtQkFBbUIsY0FDbkIsd0JBQXdCLGNBQ3hCLHlCQUF5QixjQUN6Qiw2QkFBNkI7T0FDN0IsMEJBQTBCLGNBQzFCLHlCQUF5QjthQUN6QjtFQUEwQixVQUMzQixVQUNELE9BQU8sRUFBRSxDQUFFLFlBQVksQ0FBQyxVQUN4QixPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztLQUM5QixTQUFTLEVBQUUsY0FDVCxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUU7ZUFBa0IsRUFBRTtFQUNqRSxNQUNGLENBQUMsSUFDVztFQUFnQixDQUM1Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDRDtBQUFDLFNBRlksZ0JBQWdCO0FBQzVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Tmd4R2FsbGVyeUNvbXBvbmVudH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS5jb21wb25lbnQnO1xuaW1wb3J0IHtOZ3hHYWxsZXJ5SW1hZ2VDb21wb25lbnR9IGZyb20gJy4vbmd4LWdhbGxlcnktaW1hZ2Uvbmd4LWdhbGxlcnktaW1hZ2UuY29tcG9uZW50JztcbmltcG9ydCB7Tmd4R2FsbGVyeUFycm93c0NvbXBvbmVudH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS1hcnJvd3Mvbmd4LWdhbGxlcnktYXJyb3dzLmNvbXBvbmVudCc7XG5pbXBvcnQge05neEdhbGxlcnlUaHVtYm5haWxzQ29tcG9uZW50fSBmcm9tICcuL25neC1nYWxsZXJ5LXRodW1ibmFpbHMvbmd4LWdhbGxlcnktdGh1bWJuYWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHtOZ3hHYWxsZXJ5UHJldmlld0NvbXBvbmVudH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS1wcmV2aWV3L25neC1nYWxsZXJ5LXByZXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7Tmd4R2FsbGVyeUFjdGlvbkNvbXBvbmVudH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS1hY3Rpb24vbmd4LWdhbGxlcnktYWN0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQge05neEdhbGxlcnlCdWxsZXRzQ29tcG9uZW50fSBmcm9tICcuL25neC1nYWxsZXJ5LWJ1bGxldHMvbmd4LWdhbGxlcnktYnVsbGV0cy5jb21wb25lbnQnO1xuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge0hBTU1FUl9HRVNUVVJFX0NPTkZJRywgSGFtbWVyR2VzdHVyZUNvbmZpZ30gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDdXN0b21IYW1tZXJDb25maWcgZXh0ZW5kcyBIYW1tZXJHZXN0dXJlQ29uZmlnICB7XG4gIG92ZXJyaWRlcyA9IHtcbiAgICBwaW5jaDogeyBlbmFibGU6IGZhbHNlIH0sXG4gICAgcm90YXRlOiB7IGVuYWJsZTogZmFsc2UgfVxuICB9IGFzIGFueTtcbn1cblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBOZ3hHYWxsZXJ5Q29tcG9uZW50LFxuICAgIE5neEdhbGxlcnlJbWFnZUNvbXBvbmVudCxcbiAgICBOZ3hHYWxsZXJ5QXJyb3dzQ29tcG9uZW50LFxuICAgIE5neEdhbGxlcnlUaHVtYm5haWxzQ29tcG9uZW50LFxuICAgIE5neEdhbGxlcnlQcmV2aWV3Q29tcG9uZW50LFxuICAgIE5neEdhbGxlcnlBY3Rpb25Db21wb25lbnQsXG4gICAgTmd4R2FsbGVyeUJ1bGxldHNDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogWyBDb21tb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbTmd4R2FsbGVyeUNvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHsgcHJvdmlkZTogSEFNTUVSX0dFU1RVUkVfQ09ORklHLCB1c2VDbGFzczogQ3VzdG9tSGFtbWVyQ29uZmlnIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hHYWxsZXJ5TW9kdWxlIHtcbn1cbiJdfQ==